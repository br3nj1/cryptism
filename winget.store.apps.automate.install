# Automate Window Store Installations with WinGet.
# Accepts Package & MSstore Source Aggreements.
# Confirm Publisher by uncommenting 'winget show'
# Future release to error check and output publisher.

$WinStoreApps =  @("OneNote","IrfanView64","Okular") 

function InstallWinApps()
{
     foreach ($App in $WinStoreApps)
    {    
        #  winget.exe show $app | findstr Publisher 
        winget.exe install $app --source msstore --disable-interactivity --accept-package-agreements --accept-source-agreements 

        }
    }

InstallWinApps 


#  ======================================== #
#  ========= Check Install Status ========= #
#  ---------------------------------------- #

# List of WinStoreApps to check
$WinStoreApps = @("XMLNotepad","Pocketmags","IrfanView64","Okular","IDM Integration Module","AV1 Video Extension","Raw Image Extension","HEIF Image Extensions","Windows Scan","Windows File Manager","Windows Performance Analyzer","Windows Sound Recorder","Windows File Recovery","OneNote","Mozilla Firefox","Diagnostic Data Viewer","WinDbg Preview","Phone Link","Microsoft To Do: Lists, Tasks & Reminders","Pengwin","Ubuntu on Windows","Windows Subsystem for Linux","AlmaLinux 9","Ubuntu 22.04.2 LTS","Ubuntu 18.04 on Windows","Fedora Remix for WSL","Ubuntu 20.04","Debian","OpenInWSL","GWSL","Microsoft Defender Application Guard","Microsoft Wireless Display Adapter","Microsoft Remote Desktop","OneDrive","Mozilla Firefox")

# Function to check app installation status
function Check-WinApps {
    $Results = @()

    foreach ($App in $WinStoreApps) {
        # Check if the app is installed using winget
        $SearchResult = winget.exe list | Where-Object { $_ -match $App }
        if ($SearchResult) {
            # Add status as Installed
            $Results += [PSCustomObject]@{
                PackageName = $App
                Status      = "Installed"
            }
        } else {
            # Add status as Not Installed
            $Results += [PSCustomObject]@{
                PackageName = $App
                Status      = "Not Installed"
            }
        }
    }

    # Sort and output the results as a table
    $Results | Sort-Object Status, PackageName | Format-Table -AutoSize
}

# Run the check
Check-WinApps
